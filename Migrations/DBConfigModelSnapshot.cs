// <auto-generated />
using Method;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WeatherforecastApi.Migrations
{
    [DbContext(typeof(DBConfig))]
    partial class DBConfigModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Model.UserModel", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Email");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Model.Weather", b =>
                {
                    b.Property<string>("fxDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("cloud")
                        .HasColumnType("INTEGER");

                    b.Property<int>("humidity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iconDay")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iconNight")
                        .HasColumnType("INTEGER");

                    b.Property<string>("moonPhase")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("moonPlaseIcon")
                        .HasColumnType("INTEGER");

                    b.Property<string>("moonrise")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("moonset")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("precip")
                        .HasColumnType("REAL");

                    b.Property<int>("pressure")
                        .HasColumnType("INTEGER");

                    b.Property<string>("sunrise")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("sunset")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("tempMax")
                        .HasColumnType("INTEGER");

                    b.Property<int>("tempMin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("textDay")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("textNight")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("uvIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("vis")
                        .HasColumnType("INTEGER");

                    b.Property<int>("wind360Day")
                        .HasColumnType("INTEGER");

                    b.Property<int>("wind360Night")
                        .HasColumnType("INTEGER");

                    b.Property<string>("windDirDay")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("windDirNight")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("windScaleDay")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("windScaleNight")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("windSpeedDay")
                        .HasColumnType("INTEGER");

                    b.Property<int>("windSpeedNight")
                        .HasColumnType("INTEGER");

                    b.HasKey("fxDate");

                    b.ToTable("Weathers");
                });
#pragma warning restore 612, 618
        }
    }
}
